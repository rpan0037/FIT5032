{"version":3,"file":"index.mjs","sources":["../../src/textarea/BaseTextarea.vue","../../src/textarea/Textarea.vue","../../src/textarea/Textarea.vue?vue&type=template&id=3392f7fb&lang.js"],"sourcesContent":["<script>\nimport BaseInput from '@primevue/core/baseinput';\nimport TextareaStyle from 'primevue/textarea/style';\n\nexport default {\n    name: 'BaseTextarea',\n    extends: BaseInput,\n    props: {\n        autoResize: Boolean\n    },\n    style: TextareaStyle,\n    provide() {\n        return {\n            $pcTextarea: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <textarea :class=\"cx('root')\" :value=\"d_value\" :name=\"name\" :disabled=\"disabled\" :aria-invalid=\"invalid || undefined\" :data-p=\"dataP\" @input=\"onInput\" v-bind=\"attrs\"></textarea>\n</template>\n\n<script>\nimport { cn } from '@primeuix/utils';\nimport { mergeProps } from 'vue';\nimport BaseTextarea from './BaseTextarea.vue';\n\nexport default {\n    name: 'Textarea',\n    extends: BaseTextarea,\n    inheritAttrs: false,\n    observer: null,\n    mounted() {\n        if (this.autoResize) {\n            this.observer = new ResizeObserver(() => {\n                // Firefox has issues without the requestAnimationFrame - ResizeObserver loop completed with undelivered notifications.\n                requestAnimationFrame(() => {\n                    this.resize();\n                });\n            });\n            this.observer.observe(this.$el);\n        }\n    },\n    updated() {\n        if (this.autoResize) {\n            this.resize();\n        }\n    },\n    beforeUnmount() {\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n    },\n    methods: {\n        resize() {\n            if (!this.$el.offsetParent) return;\n\n            const currentHeight = this.$el.style.height;\n            const currentHeightValue = parseInt(currentHeight) || 0;\n            const initialScrollHeight = this.$el.scrollHeight;\n\n            const needsExpanding = !currentHeightValue || initialScrollHeight > currentHeightValue;\n            const needsShrinking = currentHeightValue && initialScrollHeight < currentHeightValue;\n\n            if (needsShrinking) {\n                this.$el.style.height = 'auto';\n                this.$el.style.height = `${this.$el.scrollHeight}px`;\n            } else if (needsExpanding) {\n                this.$el.style.height = `${initialScrollHeight}px`;\n            }\n        },\n        onInput(event) {\n            if (this.autoResize) {\n                this.resize();\n            }\n\n            this.writeValue(event.target.value, event);\n        }\n    },\n    computed: {\n        attrs() {\n            return mergeProps(\n                this.ptmi('root', {\n                    context: {\n                        filled: this.$filled,\n                        disabled: this.disabled\n                    }\n                }),\n                this.formField\n            );\n        },\n        dataP() {\n            return cn({\n                invalid: this.$invalid,\n                fluid: this.$fluid,\n                filled: this.$variant === 'filled',\n                [this.size]: this.size\n            });\n        }\n    }\n};\n</script>\n","<template>\n    <textarea :class=\"cx('root')\" :value=\"d_value\" :name=\"name\" :disabled=\"disabled\" :aria-invalid=\"invalid || undefined\" :data-p=\"dataP\" @input=\"onInput\" v-bind=\"attrs\"></textarea>\n</template>\n\n<script>\nimport { cn } from '@primeuix/utils';\nimport { mergeProps } from 'vue';\nimport BaseTextarea from './BaseTextarea.vue';\n\nexport default {\n    name: 'Textarea',\n    extends: BaseTextarea,\n    inheritAttrs: false,\n    observer: null,\n    mounted() {\n        if (this.autoResize) {\n            this.observer = new ResizeObserver(() => {\n                // Firefox has issues without the requestAnimationFrame - ResizeObserver loop completed with undelivered notifications.\n                requestAnimationFrame(() => {\n                    this.resize();\n                });\n            });\n            this.observer.observe(this.$el);\n        }\n    },\n    updated() {\n        if (this.autoResize) {\n            this.resize();\n        }\n    },\n    beforeUnmount() {\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n    },\n    methods: {\n        resize() {\n            if (!this.$el.offsetParent) return;\n\n            const currentHeight = this.$el.style.height;\n            const currentHeightValue = parseInt(currentHeight) || 0;\n            const initialScrollHeight = this.$el.scrollHeight;\n\n            const needsExpanding = !currentHeightValue || initialScrollHeight > currentHeightValue;\n            const needsShrinking = currentHeightValue && initialScrollHeight < currentHeightValue;\n\n            if (needsShrinking) {\n                this.$el.style.height = 'auto';\n                this.$el.style.height = `${this.$el.scrollHeight}px`;\n            } else if (needsExpanding) {\n                this.$el.style.height = `${initialScrollHeight}px`;\n            }\n        },\n        onInput(event) {\n            if (this.autoResize) {\n                this.resize();\n            }\n\n            this.writeValue(event.target.value, event);\n        }\n    },\n    computed: {\n        attrs() {\n            return mergeProps(\n                this.ptmi('root', {\n                    context: {\n                        filled: this.$filled,\n                        disabled: this.disabled\n                    }\n                }),\n                this.formField\n            );\n        },\n        dataP() {\n            return cn({\n                invalid: this.$invalid,\n                fluid: this.$fluid,\n                filled: this.$variant === 'filled',\n                [this.size]: this.size\n            });\n        }\n    }\n};\n</script>\n"],"names":["name","BaseInput","props","autoResize","Boolean","style","TextareaStyle","provide","$pcTextarea","$parentInstance","BaseTextarea","inheritAttrs","observer","mounted","_this","ResizeObserver","requestAnimationFrame","resize","observe","$el","updated","beforeUnmount","disconnect","methods","offsetParent","currentHeight","height","currentHeightValue","parseInt","initialScrollHeight","scrollHeight","needsExpanding","needsShrinking","concat","onInput","event","writeValue","target","value","computed","attrs","mergeProps","ptmi","context","filled","$filled","disabled","formField","dataP","cn","_defineProperty","invalid","$invalid","fluid","$fluid","$variant","size","_openBlock","_createElementBlock","_mergeProps","_ctx","cx","d_value","undefined","$options","apply","arguments","_hoisted_1"],"mappings":"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"}